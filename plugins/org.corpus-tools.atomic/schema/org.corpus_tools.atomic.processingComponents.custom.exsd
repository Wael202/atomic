<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.corpus_tools.atomic" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.corpus_tools.atomic" id="org.corpus_tools.atomic.processingComponents" name="Processing components for corpora"/>
      </appinfo>
      <documentation>
         This extension point allows clients to provide new processing components for corpus texts.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="customProcessingComponent"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="customProcessingComponent">
      <annotation>
         <documentation>
            A custom processing component
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique, path-style identifier, may be used in APIs to identify the component, e.g., &quot;org.corpus_tools.tokenizers.treetaggerlike&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the custom processing component
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.corpus_tools.atomic.extensions.processingcomponents.CustomProcessingComponent:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="category" use="required">
            <annotation>
               <documentation>
                  The category of the custom processing component must always be &quot;custom&quot;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="custom">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="description" type="string" use="required">
            <annotation>
               <documentation>
                  The processing component&apos;s description. Will be used in GUIs to inform the user about the functionality of the component, in a brief but comprehensive manner.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="wizardPage" type="string">
            <annotation>
               <documentation>
                  A wizard page to collect configuration information for the custom processing component.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.corpus_tools.atomic.extensions.processingcomponents.ui.ProcessingComponentWizardPage:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="resultsView" type="string">
            <annotation>
               <documentation>
                  A view that displays the outcome of processing with this component.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         public class SentencePartitioner extends ProcessingComponent {
 @Override
 public String[] partitionSourceText(String corpusText) {
  return corpusText.split(&amp;quot;(?&amp;lt;=\\.)&amp;quot;);
 }
}
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2015 Stephan Druskat.
All rights reserved. This program and the accompanying materials are made available under the terms of the Apache License v2.0 which accompanies this distribution, and is available at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0.html&lt;/a&gt;.
      </documentation>
   </annotation>

</schema>
